name: Upload Video to Catbox

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'Video URL (TikTok, Instagram, Pinterest, etc.)'
        required: true
        type: string
      message_id:
        description: 'Discord Message ID for response tracking'
        required: false
        type: string

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install ffmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - name: Install dependencies (yt-dlp, requests)
        run: |
          pip install git+https://github.com/yt-dlp/yt-dlp.git
          pip install requests

      - name: Warm up Facebook (–¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ, —è–∫—â–æ URL –∑ Facebook)
        if: contains(github.event.inputs.url, 'facebook.com') || contains(github.event.inputs.url, 'fb.watch')
        run: |
          curl -s -L -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
            --max-time 30 "${{ github.event.inputs.url }}" > /dev/null 2>&1 || true
          sleep 3

      - name: Check content and size
        id: check
        run: |
          MAX_SIZE_BYTES=$((180 * 1024 * 1024))
          URL="${{ github.event.inputs.url }}"
          
          INFO=$(yt-dlp --dump-json --simulate --allow-unplayable-formats --extractor-args "pinterest:use_webpage=True" --no-check-certificate "$URL" 2>/dev/null)
          
          if [ -z "$INFO" ]; then
            echo "type=error" >> "$GITHUB_OUTPUT"
            echo "error_message=‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –≤–º—ñ—Å—Ç" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          
          PYTHON_OUTPUT=$(echo "$INFO" | python3 -c "
import sys, json
try:
  info = json.load(sys.stdin)
  filesize = info.get('filesize', 0)
  if filesize > 0 and filesize > $MAX_SIZE_BYTES:
    print('type=too_large|size_too_large|' + str(filesize))
    sys.exit()
  formats = info.get('formats', [])
  if any(f.get('vcodec', 'none') != 'none' for f in formats):
    print('type=video')
  elif any(f.get('acodec', 'none') != 'none' for f in formats):
    print('type=audio')
  elif info.get('thumbnail'):
    print('type=image')
  else:
    print('type=text')
except Exception as e:
  print('type=unknown|error=' + str(e))
")

          if [[ "$PYTHON_OUTPUT" == type=too_large* ]]; then
            echo "type=too_large" >> "$GITHUB_OUTPUT"
            echo "error_message=‚ùå –í—ñ–¥–µ–æ –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–µ (–º–∞–∫—Å. 180 –ú–ë)" >> "$GITHUB_OUTPUT"
          else
            echo "$PYTHON_OUTPUT" >> "$GITHUB_OUTPUT"
          fi

      - name: Handle non-video or too large content
        if: steps.check.outputs.type != 'video'
        run: |
          TYPE="${{ steps.check.outputs.type }}"
          MSG_ID="${{ github.event.inputs.message_id }}"
          WEBHOOK="${{ secrets.DISCORD_RESULTS_WEBHOOK }}"
          CONTENT=""
          case "$TYPE" in
            "too_large") CONTENT="‚ùå –í—ñ–¥–µ–æ –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–µ (–º–∞–∫—Å. 180 –ú–ë)" ;;
            "image") CONTENT="üñºÔ∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞" ;;
            "audio") CONTENT="üéµ –ê—É–¥—ñ–æ" ;;
            "text") CONTENT="üìù –¢–µ–∫—Å—Ç–æ–≤–∏–π –ø–æ—Å—Ç" ;;
            "error") CONTENT="${{ steps.check.outputs.error_message }}" ;;
            *) CONTENT="üìÑ –ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç" ;;
          esac
          if [ "$WEBHOOK" != "" ] && [ -n "$MSG_ID" ]; then
            curl -X POST -H "Content-Type: application/json" \
              -d "{\"content\": \"$CONTENT –¥–ª—è message $MSG_ID\"}" \
              "$WEBHOOK"
          fi

      - name: Process and upload video
        if: steps.check.outputs.type == 'video'
        id: upload
        run: |
          URL="${{ github.event.inputs.url }}"
          echo "üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –≤–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞ Catbox..."
          LINK=$(yt-dlp \
            --retries 3 --fragment-retries 3 --sleep-interval 2 \
            --merge-output-format mp4 --allow-unplayable-formats \
            --extractor-args "pinterest:use_webpage=True" \
            --user-agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36" \
            --no-check-certificate --output - "$URL" | \
            curl -s -H "Expect:" \
            -F "reqtype=fileupload" \
            -F "fileToUpload=@-;filename=video.mp4;type=video/mp4" \
            https://catbox.moe/user/api.php)
          if [[ "$LINK" =~ ^https:// ]]; then
            echo "link=$LINK" >> "$GITHUB_OUTPUT"
          else
            echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: $LINK"
            exit 1
          fi

      - name: Send result to Discord
        if: steps.upload.outputs.link != ''
        run: |
          LINK="${{ steps.upload.outputs.link }}"
          MSG_ID="${{ github.event.inputs.message_id }}"
          WEBHOOK="${{ secrets.DISCORD_RESULTS_WEBHOOK }}"
          if [ "$WEBHOOK" != "" ]; then
            if [ -n "$MSG_ID" ]; then
              curl -X POST -H "Content-Type: application/json" \
                -d "{\"content\": \"üîó –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è message $MSG_ID: $LINK\"}" \
                "$WEBHOOK"
            else
              curl -X POST -H "Content-Type: application/json" \
                -d "{\"content\": \"üéûÔ∏è $LINK\"}" \
                "$WEBHOOK"
            fi
          fi
