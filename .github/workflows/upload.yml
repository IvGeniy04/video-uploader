name: Upload Video to Catbox

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'Video URL (TikTok, Instagram, Pinterest, etc.)'
        required: true
        type: string
      message_id:
        description: 'Discord Message ID for response tracking'
        required: false
        type: string

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache yt-dlp
        uses: actions/cache@v3
        with:
          path: ~/.local/bin/yt-dlp
          key: yt-dlp-latest

      - name: Install yt-dlp (cached)
        if: steps.cache-yt-dlp.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.local/bin
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o ~/.local/bin/yt-dlp
          chmod +x ~/.local/bin/yt-dlp
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache ffmpeg
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/ffmpeg
          key: ffmpeg-6.0

      - name: Install ffmpeg (if not cached)
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        run: |
          sudo apt update && sudo apt install -y ffmpeg

      - name: Install requests
        run: |
          pip install requests

      - name: Download and upload video
        id: catbox
        run: |
          MAX_SIZE_BYTES=$((180 * 1024 * 1024))
          VIDEO_URL="${{ inputs.url }}"

          echo "🔍 Processing: $VIDEO_URL"

          # Для Pinterest — обов’язково use_webpage
          if [[ "$VIDEO_URL" == *"pinterest"* || "$VIDEO_URL" == *"pin.it"* ]]; then
            EXTRA_ARGS="--extractor-args 'pinterest:use_webpage=True' --user-agent 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'"
            ALLOW_UNPLAYABLE="--allow-unplayable-formats"
          else
            EXTRA_ARGS=""
            ALLOW_UNPLAYABLE=""
          fi

          # Для Telegram — свій User-Agent
          if [[ "$VIDEO_URL" == *"t.me"* ]]; then
            USER_AGENT="Mozilla/5.0 (compatible; TelegramBot)"
          else
            USER_AGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
          fi

          # Отримуємо інформацію
          INFO=$(yt-dlp $EXTRA_ARGS $ALLOW_UNPLAYABLE --dump-json --user-agent "$USER_AGENT" --no-check-certificate "$VIDEO_URL" 2>/dev/null)
          if [ -z "$INFO" ]; then
            echo "❌ No info — trying direct download"
          else
            FILESIZE=$(echo "$INFO" | python3 -c "import sys, json; print(json.load(sys.stdin).get('filesize', 0))")
            if [ "$FILESIZE" -gt "$MAX_SIZE_BYTES" ] && [ "$FILESIZE" -gt 0 ]; then
              echo "❌ Too large"
              exit 1
            fi
          fi

          # Завантажуємо і вивантажуємо
          OUTPUT_LINK=$(yt-dlp \
            $EXTRA_ARGS \
            $ALLOW_UNPLAYABLE \
            --user-agent "$USER_AGENT" \
            --no-check-certificate \
            --format "best[ext=mp4]" \
            --merge-output-format mp4 \
            --output - \
            "$VIDEO_URL" | \
            curl -f -s -H "Expect:" \
            -F "reqtype=fileupload" \
            -F "fileToUpload=@-;filename=video.mp4;type=video/mp4" \
            https://catbox.moe/user/api.php)

          if [[ "$OUTPUT_LINK" =~ ^https://files\.catbox\.moe/.*\.(mp4|webm)$ ]]; then
            echo "link=$OUTPUT_LINK" >> $GITHUB_OUTPUT
          else
            exit 1
          fi

      - name: Send result to results channel
        if: success()
        run: |
          MESSAGE_ID="${{ inputs.message_id }}"
          if [ "${{ secrets.DISCORD_RESULTS_WEBHOOK }}" != "" ] && [ -n "$MESSAGE_ID" ]; then
            curl -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"🔗 Result for message $MESSAGE_ID: ${{ steps.catbox.outputs.link }}\"}" \
            ${{ secrets.DISCORD_RESULTS_WEBHOOK }}
          fi
