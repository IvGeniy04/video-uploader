name: Upload Video to Catbox

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'Video URL'
        required: true
        type: string
      message_id:
        description: 'Discord Message ID'
        required: false
        type: string

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install ffmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - name: Install dependencies
        run: |
          pip install git+https://github.com/yt-dlp/yt-dlp.git
          pip install requests

      - name: Check content type
        id: content_check
        run: |
          echo "üîç –ê–Ω–∞–ª—ñ–∑ –∫–æ–Ω—Ç–µ–Ω—Ç—É: ${{ inputs.url }}"
          INFO=$(yt-dlp --dump-json --no-check-certificate "${{ inputs.url }}" 2>/dev/null)
          
          if [ -z "$INFO" ]; then
            echo "type=error" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          HAS_VIDEO=$(echo "$INFO" | python3 -c "import sys, json; info = json.load(sys.stdin); formats = info.get('formats', []); print('video' if any(f.get('vcodec', 'none') != 'none' for f in formats) else 'audio' if any(f.get('acodec', 'none') != 'none' for f in formats) else 'image' if info.get('thumbnail') else 'text')")
          
          echo "type=$HAS_VIDEO" >> $GITHUB_OUTPUT
          
          if [ "${{ secrets.DISCORD_RESULTS_WEBHOOK }}" != "" ] && [ -n "${{ inputs.message_id }}" ]; then
            case "$HAS_VIDEO" in
              "video")
                EMOJI="üì∫"
                DESC="–≤—ñ–¥–µ–æ"
                ;;
              "image")
                EMOJI="üñºÔ∏è"
                DESC="–∫–∞—Ä—Ç–∏–Ω–∫–∞"
                ;;
              "audio")
                EMOJI="üéµ"
                DESC="–∞—É–¥—ñ–æ"
                ;;
              "text")
                EMOJI="üìù"
                DESC="—Ç–µ–∫—Å—Ç"
                ;;
              *)
                EMOJI="‚ùì"
                DESC="–Ω–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø"
                ;;
            esac
            curl -X POST -H "Content-Type: application/json" \
              -d "{\"content\": \"$EMOJI –í–∏–∑–Ω–∞—á–µ–Ω–æ: $DESC –¥–ª—è message ${{ inputs.message_id }}\"}" \
              "${{ secrets.DISCORD_RESULTS_WEBHOOK }}"
          fi

      - name: Skip non-video
        if: steps.content_check.outputs.type != 'video'
        run: |
          echo "üö´ –ù–µ –≤—ñ–¥–µ–æ ‚Äî –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è"
          exit 0

      - name: Download video (Attempt 1)
        if: steps.content_check.outputs.type == 'video'
        id: download_attempt_1
        run: |
          if [ "${{ secrets.DISCORD_RESULTS_WEBHOOK }}" != "" ] && [ -n "${{ inputs.message_id }}" ]; then
            curl -X POST -H "Content-Type: application/json" \
              -d "{\"content\": \"üì•1 –¥–ª—è message ${{ inputs.message_id }}\"}" \
              "${{ secrets.DISCORD_RESULTS_WEBHOOK }}"
          fi
          
          yt-dlp \
            --output "video.mp4" \
            --merge-output-format mp4 \
            --no-check-certificate \
            "${{ inputs.url }}" && \
          echo "status=success" >> $GITHUB_OUTPUT || \
          echo "status=failed" >> $GITHUB_OUTPUT

      - name: Download video (Attempt 2)
        if: steps.download_attempt_1.outputs.status == 'failed' && steps.content_check.outputs.type == 'video'
        id: download_attempt_2
        run: |
          if [ "${{ secrets.DISCORD_RESULTS_WEBHOOK }}" != "" ] && [ -n "${{ inputs.message_id }}" ]; then
            curl -X POST -H "Content-Type: application/json" \
              -d "{\"content\": \"üì•2 –¥–ª—è message ${{ inputs.message_id }}\"}" \
              "${{ secrets.DISCORD_RESULTS_WEBHOOK }}"
          fi
          
          yt-dlp \
            --output "video.mp4" \
            --merge-output-format mp4 \
            --no-check-certificate \
            "${{ inputs.url }}" && \
          echo "status=success" >> $GITHUB_OUTPUT || \
          echo "status=failed" >> $GITHUB_OUTPUT

      - name: Upload to Catbox (Attempt 1)
        if: steps.download_attempt_1.outputs.status == 'success' || steps.download_attempt_2.outputs.status == 'success'
        id: upload_attempt_1
        run: |
          if [ "${{ secrets.DISCORD_RESULTS_WEBHOOK }}" != "" ] && [ -n "${{ inputs.message_id }}" ]; then
            curl -X POST -H "Content-Type: application/json" \
              -d "{\"content\": \"üì§1 –¥–ª—è message ${{ inputs.message_id }}\"}" \
              "${{ secrets.DISCORD_RESULTS_WEBHOOK }}"
          fi
          
          LINK=$(curl -s -H "Expect:" \
            -F "reqtype=fileupload" \
            -F "fileToUpload=@video.mp4" \
            https://catbox.moe/user/api.php)
          
          if [[ "$LINK" =~ ^https:// ]]; then
            echo "link=$LINK" >> $GITHUB_OUTPUT
          else
            exit 1
          fi

      - name: Upload to Catbox (Attempt 2)
        if: failure() && (steps.download_attempt_1.outputs.status == 'success' || steps.download_attempt_2.outputs.status == 'success')
        id: upload_attempt_2
        run: |
          if [ "${{ secrets.DISCORD_RESULTS_WEBHOOK }}" != "" ] && [ -n "${{ inputs.message_id }}" ]; then
            curl -X POST -H "Content-Type: application/json" \
              -d "{\"content\": \"üì§2 –¥–ª—è message ${{ inputs.message_id }}\"}" \
              "${{ secrets.DISCORD_RESULTS_WEBHOOK }}"
          fi
          
          LINK=$(curl -s -H "Expect:" \
            -F "reqtype=fileupload" \
            -F "fileToUpload=@video.mp4" \
            https://catbox.moe/user/api.php)
          
          if [[ "$LINK" =~ ^https:// ]]; then
            echo "link=$LINK" >> $GITHUB_OUTPUT
          else
            exit 1
          fi

      - name: Send success status
        if: success()
        run: |
          if [ "${{ secrets.DISCORD_RESULTS_WEBHOOK }}" != "" ] && [ -n "${{ inputs.message_id }}" ]; then
            curl -X POST -H "Content-Type: application/json" \
              -d "{\"content\": \"‚úÖ –¥–ª—è message ${{ inputs.message_id }}\"}" \
              "${{ secrets.DISCORD_RESULTS_WEBHOOK }}"
          fi

      - name: Send error status
        if: failure()
        run: |
          if [ "${{ secrets.DISCORD_RESULTS_WEBHOOK }}" != "" ] && [ -n "${{ inputs.message_id }}" ]; then
            curl -X POST -H "Content-Type: application/json" \
              -d "{\"content\": \"‚ùå –¥–ª—è message ${{ inputs.message_id }}\"}" \
              "${{ secrets.DISCORD_RESULTS_WEBHOOK }}"
          fi

      - name: Clean up
        if: always()
        run: |
          rm -f video.mp4
