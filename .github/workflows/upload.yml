# üìÅ .github/workflows/upload.yml ‚Äî version: v2.4

name: \U0001F4E4 Upload Video

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'Video URL'
        required: true
        type: string
      message_id:
        description: 'Discord message ID'
        required: false
        type: string

jobs:
  upload:
    runs-on: ubuntu-latest

    env:
      DISCORD_RESULTS_WEBHOOK: ${{ secrets.DISCORD_RESULTS_WEBHOOK }}

    steps:
      - name: \U0001F4E6 Checkout repository
        uses: actions/checkout@v4

      - name: \U0001F4C2 Create folders
        run: |
          mkdir -p yt-dlp-FFmpeg

      - name: \U0001F527 Set up FFmpeg & yt-dlp (cache)
        uses: actions/cache/restore@v4
        id: ffmpeg-cache
        with:
          path: yt-dlp-FFmpeg
          key: yt-dlp-FFmpeg-237717375-Linux

      - name: \U0001F4E5 Extract FFmpeg & yt-dlp
        if: steps.ffmpeg-cache.outputs.cache-hit == 'true'
        run: |
          tar -xf ${{ steps.ffmpeg-cache.outputs.cache-path }} -C yt-dlp-FFmpeg --use-compress-program unzstd

      - name: \U0001F4DD Add to PATH
        run: echo "$(pwd)/yt-dlp-FFmpeg" >> $GITHUB_PATH

      - name: ‚¨Ü Download yt-dlp latest stable
        uses: actions/cache/restore@v4
        id: ytdlp-stable-cache
        with:
          path: yt-dlp
          key: yt-dlp-stable-Linux

      - name: ‚¨áÔ∏è Install yt-dlp stable (if cache missed)
        if: steps.ytdlp-stable-cache.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o yt-dlp
          chmod +x yt-dlp

      - name: ‚úÖ Confirm yt-dlp version
        run: yt-dlp --version

      - name: ‚¨áÔ∏è Install dependencies
        run: sudo apt-get update && sudo apt-get install -y python3 python3-pip

      - name: \U0001F4D1 Install Python requirements (if any)
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: \U0001F4C1 Create temp download folder
        run: mkdir -p output && cd output

      - name: \U0001F4C0 Download video
        run: |
          yt-dlp "${{ inputs.url }}" -o "output/video.%(ext)s" --no-playlist

      - name: \U0001F4E3 Notify: Start uploading
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{"content": "‚è´ Uploading to Catbox..."}' \
            "$DISCORD_RESULTS_WEBHOOK"

      - name: \U0001F4E4 Upload to Catbox
        id: upload_catbox
        run: |
          FILE=$(ls output/video.* | head -n1)
          RESPONSE=$(curl -s -F "reqtype=fileupload" -F "file=@$FILE" https://catbox.moe/user/api.php)
          echo "url=$RESPONSE" >> $GITHUB_OUTPUT

      - name: \U0001F4AC Post to Discord
        if: success()
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d "{\"content\": \"‚úÖ Video uploaded: ${{ steps.upload_catbox.outputs.url }}\", \"message_reference\": {\"message_id\": \"${{ inputs.message_id }}\"}}" \
            "$DISCORD_RESULTS_WEBHOOK"

      - name: ‚ùå Notify on failure
        if: failure()
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{"content": "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–±—Ä–æ–±–∏—Ç–∏ –≤—ñ–¥–µ–æ"}' \
            "$DISCORD_RESULTS_WEBHOOK"
