name: Upload Social Videos

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: 'Video URL'
        required: true
        type: string

jobs:
  download-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache tools
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/yt-dlp
            ~/.cache/pip
          key: tools-cache-v1

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg aria2
          pip install -U yt-dlp

      - name: Determine source
        id: source
        run: |
          URL="${{ github.event.inputs.video_url }}"
          echo "URL=$URL" >> $GITHUB_ENV

          if echo "$URL" | grep -q 't.me'; then
            echo "site=telegram" >> $GITHUB_ENV
          elif echo "$URL" | grep -q 'facebook.com'; then
            echo "site=facebook" >> $GITHUB_ENV
          elif echo "$URL" | grep -q 'tiktok.com'; then
            echo "site=tiktok" >> $GITHUB_ENV
          elif echo "$URL" | grep -q 'pinterest.com'; then
            echo "site=pinterest" >> $GITHUB_ENV
          elif echo "$URL" | grep -q 'instagram.com'; then
            echo "site=instagram" >> $GITHUB_ENV
          else
            echo "Unsupported site"
            exit 1
          fi

      - name: Download and process video
        id: download
        run: |
          echo "Downloading from $URL..."

          yt-dlp --verbose --retries 2 --fragment-retries 2 \
            --format "bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo[ext=mp4]/best" \
            --merge-output-format mp4 \
            --downloader aria2c \
            -o "video.%(ext)s" "$URL"

          FILE=$(ls video.* | head -n1)
          if [ ! -f "$FILE" ]; then
            echo "❌ No video downloaded"
            exit 1
          fi

          echo "FILE=$FILE" >> $GITHUB_ENV

      - name: Upload to Catbox
        id: catbox
        run: |
          LINK=$(curl -s -H "Expect:" \
            -F "reqtype=fileupload" \
            -F "fileToUpload=@$FILE" \
            https://catbox.moe/user/api.php)

          echo "Catbox link: $LINK"
          echo "link=$LINK" >> $GITHUB_OUTPUT

      - name: Send to Discord
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"🎥 Залито з $site: ${{ steps.catbox.outputs.link }}\"}" \
            ${{ secrets.DISCORD_WEBHOOK }}

      - name: Clean up
        run: rm -f video.*
