name: Upload Video

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'Video URL'
        required: true
        type: string
      message_id:
        description: 'Discord Message ID (optional)'
        required: false
        type: string

env:
  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4

      - name: üì¶ Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: üíæ Cache aria2 and yt-dlp
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/yt-dlp
            ~/.cache/aria2
          key: yt-dlp-aria2-${{ runner.os }}-${{ hashFiles('**/upload.yml') }}

      - name: üõ†Ô∏è Install dependencies
        run: |
          pip install --upgrade pip
          pip install yt-dlp requests

      - name: ‚öôÔ∏è Download video
        id: download_step
        run: |
          URL="${{ github.event.inputs.url }}"
          echo "Downloading from $URL..."

          # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞: —á–∏ Pinterest ‚Äî –±–æ —á–∞—Å—Ç–æ –±–µ–∑ –∑–≤—É–∫—É
          if echo "$URL" | grep -qE 'pin\.it|pinterest\.com'; then
            yt-dlp --verbose --retries 2 --fragment-retries 2 \
              --downloader aria2c \
              --merge-output-format mp4 \
              -f 'bestvideo+bestaudio/best' \
              -o 'video.%(ext)s' \
              "$URL" || {
                echo "‚ùå Pinterest fallback to best"
                yt-dlp --verbose --retries 2 --fragment-retries 2 \
                  --downloader aria2c \
                  --merge-output-format mp4 \
                  -f best \
                  -o 'video.%(ext)s' \
                  "$URL"
              }
          else
            yt-dlp --verbose --retries 2 --fragment-retries 2 \
              --downloader aria2c \
              --merge-output-format mp4 \
              -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best' \
              -o 'video.%(ext)s' \
              "$URL"
          fi

          echo "Downloaded file:"
          ls -lh video.*

      - name: üì§ Upload to Catbox
        id: upload_step
        run: |
          FILE=$(ls video.* | head -n1)
          echo "Uploading $FILE to catbox..."
          RESPONSE=$(curl -s -F "reqtype=fileupload" -F "file=@$FILE" https://catbox.moe/user/api.php)
          echo "Response: $RESPONSE"
          echo "file_url=$RESPONSE" >> "$GITHUB_OUTPUT"

      - name: üì° Send to Discord
        if: success()
        run: |
          WEBHOOK="$DISCORD_WEBHOOK_URL"
          URL="${{ steps.upload_step.outputs.file_url }}"
          MESSAGE_ID="${{ github.event.inputs.message_id }}"
          
          if [ -n "$MESSAGE_ID" ]; then
            LINK="https://discord.com/channels/YOUR_SERVER_ID/YOUR_CHANNEL_ID/$MESSAGE_ID"
            CONTENT="**üé• –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞**\nüîó –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: $LINK\nüìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: $URL"
          else
            CONTENT="**üé• –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞**\nüìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: $URL"
          fi
          
          curl -X POST "$WEBHOOK" \
            -H "Content-Type: application/json" \
            -d "{\"content\": \"$CONTENT\"}"

